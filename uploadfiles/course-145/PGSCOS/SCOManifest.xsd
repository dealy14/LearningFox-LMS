<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by Charles McGinnis (Performix Group) -->
<xs:schema xmlns:pg="SCOManifest.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="scomanifest">
		<xs:annotation>
			<xs:documentation>This is the content agregation model for sub-sco level content.  It will eventually be depricated by the SCA in SCORM 1.3.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="orgs">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="org" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="page" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="refasset" maxOccurs="unbounded">
														<xs:complexType>
															<xs:attribute name="refAssetID" type="xs:integer" use="required"/>
															<xs:attribute name="xpage" type="xs:string" use="optional"/>
														</xs:complexType>
													</xs:element>
													<!--
													<xs:element name="refpageText" maxOccurs="unbounded">
														<xs:complexType>
															<xs:attribute name="refPageID" type="xs:integer" use="required"/>
														</xs:complexType>
													</xs:element>
													-->
												</xs:sequence>
												<xs:attribute name="template" type="xs:anyURI" use="required"/>
												<xs:attribute name="refPageID" type="xs:string" use="required"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="title" type="xs:string"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="srcassets">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="srcasset" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="srcpages">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="pageText" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Each dco may contain several pages.  These pages are assumed to be built for the WBT and not printed documentation.  In order to accomodate manuals, formating will be accomplished by using the values of all of the pages.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:choice>
										<xs:annotation>
											<xs:documentation>If the content is simple, then the author will select contBit.  If it needs heirarchical structure or formating, the author will select sectLevel1.</xs:documentation>
										</xs:annotation>
										<xs:element ref="contBit" maxOccurs="unbounded"/>
										<xs:element ref="sectLevel1" maxOccurs="unbounded"/>
									</xs:choice>
									<xs:attribute name="pageID" type="xs:integer" use="required"/>
									<xs:attribute name="num" type="xs:integer"/>
									<xs:attribute name="title" type="xs:string" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="outputMode" type="xs:string"/>
			<xs:attribute name="sident" type="xs:integer"/>
		</xs:complexType>
		<xs:key name="Key_Asset">
			<xs:selector xpath="srcassets/srcasset"/>
			<xs:field xpath="@assetID"/>
		</xs:key>
		<xs:keyref name="Ref_Asset" refer="Key_Asset">
			<xs:selector xpath=".//page/refasset"/>
			<xs:field xpath="@refAssetID"/>
		</xs:keyref>
	</xs:element>
	<xs:element name="srcasset">
		<xs:complexType>
			<xs:attribute name="title" type="xs:string"/>
			<xs:attribute name="assetID" type="xs:integer" use="required"/>
			<xs:attribute name="xref" type="xs:anyURI"/>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="text"/>
						<xs:enumeration value="graphic"/>
						<xs:enumeration value="swf"/>
						<xs:enumeration value="interaction"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="contUnStruct">
		<xs:annotation>
			<xs:documentation>The contBit is the basic container for all general textual content.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>The author chooses from the following elements.  They can be listed in any order.</xs:documentation>
				</xs:annotation>
				<xs:element ref="para" maxOccurs="unbounded"/>
				<xs:element ref="userDefInline" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="contStruct">
		<xs:annotation>
			<xs:documentation>The contBit is the basic container for all sets of structured information content.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:annotation>
					<xs:documentation>The author chooses from the following elements.  They can be listed in any order.</xs:documentation>
				</xs:annotation>
				<xs:element name="questions" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="question" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element ref="dtable" minOccurs="0"/>
				<xs:element ref="list" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="sectLevel1">
		<xs:annotation>
			<xs:documentation>The sectLevel is a means by which the author can embed heirarchy into a document.  Levels 1-3 are explicity defined for the purpose of variable formating.  Leveln repeats to infinity to allow additional flexibility.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>The author will choose whether there is a section header or not.</xs:documentation>
					</xs:annotation>
					<xs:element ref="sectitle"/>
					<xs:element ref="notitle"/>
				</xs:choice>
				<xs:element ref="contBit"/>
				<xs:element ref="sectLevel2" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="sectID" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="sectLevel2">
		<xs:annotation>
			<xs:documentation>Lower level section optionally included in sectLevel1.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>The author will choose whether there is a section header or not.</xs:documentation>
					</xs:annotation>
					<xs:element ref="sectitle"/>
					<xs:element ref="notitle"/>
				</xs:choice>
				<xs:element ref="contBit"/>
				<xs:element ref="sectLevel3" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="sectID" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="sectLevel3">
		<xs:annotation>
			<xs:documentation>Lower level section optionally included in sectLevel2.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>The author will choose whether there is a section header or not.</xs:documentation>
					</xs:annotation>
					<xs:element ref="sectitle"/>
					<xs:element ref="notitle"/>
				</xs:choice>
				<xs:element ref="contBit"/>
				<xs:element ref="sectLeveln" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="sectID" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="sectLeveln">
		<xs:annotation>
			<xs:documentation>Lower level section optionally included in sectLevel3.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>The author will choose whether there is a section header or not.</xs:documentation>
					</xs:annotation>
					<xs:element ref="sectitle"/>
					<xs:element ref="notitle"/>
				</xs:choice>
				<xs:element ref="contBit"/>
				<xs:element ref="sectLeveln" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="sectID" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="sectitle">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="textBit"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="notitle"/>
	<xs:element name="para">
		<xs:annotation>
			<xs:documentation>para is a paragraph.  The required attribute contType classifies the para as one of several specific types.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="textBit" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="userDefInline">
		<xs:annotation>
			<xs:documentation>Generic element the author can use when no other element seems appropriate.  The format is limited to a basic text string.  The required attribute purpose defines how the element is used.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="textBit" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="purpose" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="list">
		<xs:annotation>
			<xs:documentation>list is for bullets and numbering.  The required attribute contType defines whether the list is ordered or unordered.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="litem" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="contType" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="ordered"/>
						<xs:enumeration value="unordered"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="dtable">
		<xs:annotation>
			<xs:documentation>Means for defining tabular data relationships.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="tblTitle" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="textBit" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element ref="row" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="question">
		<xs:annotation>
			<xs:documentation>question is a means of recording text for very basic interactions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>There are two types of questions true/false and multiple choice.  The author must choose one.</xs:documentation>
				</xs:annotation>
				<xs:element name="tf">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="queryText"/>
							<xs:element name="true">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="textBit" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="false">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="textBit" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="multichoice">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="queryText"/>
							<xs:sequence>
								<xs:element ref="choiceText" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="contType" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="trueFalse"/>
						<xs:enumeration value="multipleChoice"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="litem">
		<xs:annotation>
			<xs:documentation>A specific line item in the list.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="textBit" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="queryText" type="xs:string"/>
	<xs:element name="row">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="cell" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="cell">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="textBit" maxOccurs="unbounded"/>
				<xs:element ref="dtable" minOccurs="0"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="contBit">
		<xs:annotation>
			<xs:documentation>The contBit is a container for  structured and unstructured information elements.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Choose one</xs:documentation>
				</xs:annotation>
				<xs:element ref="contUnStruct"/>
				<xs:element ref="contStruct"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="textBit">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="textType" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="normal"/>
								<xs:enumeration value="emphasis"/>
								<xs:enumeration value="Italics"/>
								<xs:enumeration value="xref"/>
								<xs:enumeration value="url"/>
								<xs:enumeration value="title"/>
								<xs:enumeration value="scenario"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="choiceText" type="xs:string"/>
</xs:schema>
